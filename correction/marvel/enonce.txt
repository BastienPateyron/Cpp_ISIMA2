Voici votre examen de C++ ZZ2. Lisez tout le sujet avant de commencer : un certain nombre de tests ont été écrits pour être indépendants ou avec peu d'influence sur les autres.

A la fin de l'examen, vous devez rendre un programme qui compile.

Pour plus de simplicité, je vous IMPOSE d'utiliser trois fichiers en plus de main.cpp : tests.cpp, marvel.hpp et marvel.cpp. Ne changez pas la casse et n'ajoutez pas de fichiers, cela casserait la chaine de compilation et engendrerait une note nulle.

Toutes les déclarations seront dans l'entête, les définitions/implémentations seront dans le cpp.

La ligne de compilation est la suivante :
make

Si besoin, vous pouvez faire un make clean. La première compilation de la bibliothèque Catch est un peu longue.

Ne jamais recommenter un test qui a réussi. Tous les tests décommentés doivent compiler dans le même temps (sauf mention contraire).

------------------

Stan Lee, figure emblématique de Marvel nous a quitté. Nous allons lui rendre hommage en nous plongeant dans le monde auquel il a fortement contribué : celui des supers (héros, héroïnes, vilains et pas gentilles). Quelques libertés (hum!) peuvent avoir été prise avec la mythologie pour des raisons purement de modélisation et de développement.

Derrière les "supers" se cachent le plus souvent des personnes réelles (les identites secrètes). Cette personne a un nom, un prenom et un genre (une énumération HOMME, FEMME, INDETERMINE).
[Personne1, Personne2] 

On doit pouvoir avoir des informations sur cette personne [Personne3, Inconnu3].

Dans certains cas, la forme "Super" est tellement importante qu'il n'y a pas de Personne. Vous allez donc créer une Personne particulière INCONNU, attribut de classe Personne.
[Inconnu1]

On pourra comparer cette personne "inconnue" avec une autre personne [Inconnu2] et afficher des informations [Inconnu3]

Passons maintenant aux "supers". Un super a un nom de scene et est anonyme par défaut (On l'associe tout de même a une personne) [Super1]

Ce super peut choisir d'afficher son identité réelle (méthode enregister()). Bien entendu, c'est une obligation légale pour tout super depuis le "Superhuman registration act" (Civil War) [Anonyme1]

Essayer de dévoiler l'identité d'un Super anonyme conduit à une exception, préférentiellement de type AnonymeException mais on pourra se contenter de toute exception standard. [Anonyme2, Anonyme3]

Changer l'identité d'un super le rend à nouveau anonyme ! [Super2]

Les supers ont des capacités qui peuvent être physiques, psychiques ou bien matérielles.
Chaque capacité a un nom, un niveau (plus ou moins impressionant) et peut etre utilisée.
Lorsqu'une capacité est utilisée, on fait une écriture dans un flux de sortie (log).
[Materiel] [Psychique] [Capacite] 
Chacune des capacités spécialisées a une méthode particulière appelée par la méthode polymorphique utiliser(). Plus le niveau d'une capacité est important, plus elle est impressionnante.
Wolferine, Deadpool et Captain America ont la capacité de régénération mais elle est beaucoup plus impressionnante (rapide) chez Wolferine et Deadpool.
[Capacite1]

Les capacités sont ajoutées aux Supers
[Capacite2] et déterminent un niveau comme la somme des niveaux des capacités possédées.

Certains supers "partagent" des caractéristiques communes avec d'autres... War machine a été construite à partir d'Iron Man. Il faut faire attention que les ressources soient bien rendues
[Capacite3 ][Super3]

Les supers se regroupent souvent par équipe comme les vengeurs / avengers. Le niveau de l'équipe est la somme des niveaux de ses membres.
[Equipe]

Je vous aurais bien proposé de lire ou écrire une équipe dans un fichier texte ou bien d'adapter les capacités des Supers en fonction de certains événements mais ce sera pour une prochaine fois !!!
